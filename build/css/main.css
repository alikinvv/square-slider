.icon{display:inline-block;width:2em;height:2em;font-size:30px}body{overflow:hidden;font-family:'Roboto Condensed',sans-serif}a,body{color:#fff}.canvasWrap{position:relative;overflow:hidden}.canvasWrap:before{content:'';position:absolute;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,.2)}.images{display:none}.header,.load{top:0;left:0;z-index:20}.load{width:0;height:8px;background:#fff;position:absolute}.header{padding:50px 5%}.header p{font-size:30px;font-weight:700}.header .menu{position:absolute;right:5%;top:46%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);z-index:20;width:35px;height:35px}.header .menu:after,.header .menu:before{content:'';position:absolute;left:0;width:100%;height:2px;background:#fff}.header .menu:before{top:12px}.header .menu:after{top:21px}.caption,.captions,.header{position:absolute;width:100%}.captions{bottom:5%;z-index:20;color:#fff;height:200px;overflow:hidden;left:5%}.captions .count{font-size:200px;font-weight:700;float:left;margin:0 35px 0 0;line-height:1}.captions .title{font-size:70px;font-weight:700;letter-spacing:5px;line-height:1}.captions .loc{color:#ccc;letter-spacing:2px;font-size:16px;line-height:1}.captions .buttonWrap{padding-top:29px;overflow:hidden}.captions .titleWrap{margin-top:14px;overflow:hidden}.captions .locWrap{overflow:hidden}.caption{top:0;left:0}.button{background:#fff;color:#333;display:inline-block;padding:6px 29px;text-decoration:none}.button:focus,.button:hover{text-decoration:none;color:#333}.read{position:absolute;right:5%;bottom:7%;color:#fff;font-weight:700;font-size:20px;z-index:30}.read:before{content:'';right:-25px;position:absolute;left:-25px;bottom:-10px;height:1px;background:#fff;-webkit-transition:all .4s ease-in-out;-o-transition:all .4s ease-in-out;transition:all .4s ease-in-out}.read:focus,.read:hover{color:#fff;text-decoration:none}.read:focus:before,.read:hover:before{left:-40px;right:-40px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
